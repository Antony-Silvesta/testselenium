name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        options: --health-cmd='curl --silent --fail http://localhost:27017 || exit 1' --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 27017:27017

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js (example for Node.js project)
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Wait for MongoDB to start
      run: |
        echo "Waiting for MongoDB to start..."
        until mongo --host localhost --eval "db.runCommand({ connectionStatus: 1 })"; do
          echo "MongoDB is not ready yet, retrying..."
          sleep 5
        done
        echo "MongoDB is up and running!"

    - name: Run tests
      run: npm test

    - name: Archive test results
      if: success() # Only upload if tests passed
      uses: actions/upload-artifact@v3
      with:
        name: test-logs
        path: |
          path/to/test-logs/*.log
          path/to/test-reports/*.html

    - name: Upload HTML reports (optional)
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: html-reports
        path: path/to/test-reports/*.html

    - name: Upload all logs (optional)
      if: always() # Always upload logs
      uses: actions/upload-artifact@v3
      with:
        name: logs
        path: path/to/logs/*.log

    - name: Clean up MongoDB service
      if: always()
      run: |
        docker ps -q --filter "name=mongodb" | xargs docker stop
